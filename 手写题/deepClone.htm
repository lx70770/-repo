<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta http-equiv="X-UA-Compatible" content="ie=edge" />
    <title>Document</title>
  </head>
  <body></body>
  <script>
    function deepClone(obj) {
      if (typeof obj !== "object") {
        return obj;
      }

      let newObj = {};
      for (let item in obj) {
        newObj[item] =
          typeof obj[item] === "object" ? deepClone(obj[item]) : obj[item];
      }
    }

    function deepClone1(target) {
      if (typeof target !== "object") {
        throw new TypeError("target must be an object");
      }

      let obj = {};
      const proptype = Reflect.getPrototypeOf(target);
      Reflect.setPrototypeOf(obj, proptype);

      Reflect.ownKeys(target).forEach(item => {
        if (typeof target[item] === "object") {
          obj[item] = deepClone1(target[item]);
        } else {
          obj[item] = target[item];
        }
      });
      return obj;
    }

    let obj = {
      a: "1",
      b: "2",
      c: {
        c1: "c1",
        c2: {
          c3: "c3"
        },
        c4: "c4",
        c5: [{ v: "11", v4: { r1: "22" } }]
      }
    };

    console.log(deepClone1(obj));
  </script>
</html>
